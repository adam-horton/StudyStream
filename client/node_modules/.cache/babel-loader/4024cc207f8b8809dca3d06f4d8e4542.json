{"ast":null,"code":"export default (function () {\n  let posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ALL:\n      return posts;\n\n    case CREATE:\n      return posts;\n\n    default:\n      return posts;\n  }\n}); //\n//     case LIKE:\n//       return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n//     case CREATE:\n//       return [...posts, action.payload];\n//     case UPDATE:\n//       return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n//     case DELETE:\n//       return posts.filter((post) => post._id !== action.payload);\n//     default:\n//       return posts;\n//   }}\n// import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n//\n// export default (posts = [], action) => {\n//   switch (action.type) {\n//     case FETCH_ALL:\n//       return action.payload;\n//     case LIKE:\n//       return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n//     case CREATE:\n//       return [...posts, action.payload];\n//     case UPDATE:\n//       return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n//     case DELETE:\n//       return posts.filter((post) => post._id !== action.payload);\n//     default:\n//       return posts;\n//   }\n// };\n//","map":{"version":3,"sources":["C:/Users/15617/CLionProjects/StudyStream/client/src/reducers/posts.js"],"names":["posts","action","type","FETCH_ALL","CREATE"],"mappings":"AAAA,gBAAe,YAAqB;AAAA,MAApBA,KAAoB,uEAAZ,EAAY;AAAA,MAATC,MAAS;;AAClC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,SAAL;AACE,aAAOH,KAAP;;AACF,SAAKI,MAAL;AACE,aAAOJ,KAAP;;AACF;AACE,aAAOA,KAAP;AANJ;AAQD,CATD,E,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export default (posts = [],action)=>{\r\n  switch (action.type) {\r\n    case FETCH_ALL:\r\n      return posts;\r\n    case CREATE:\r\n      return posts;\r\n    default:\r\n      return posts;\r\n  }\r\n}\r\n//\r\n//     case LIKE:\r\n//       return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n//     case CREATE:\r\n//       return [...posts, action.payload];\r\n//     case UPDATE:\r\n//       return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n//     case DELETE:\r\n//       return posts.filter((post) => post._id !== action.payload);\r\n//     default:\r\n//       return posts;\r\n//   }}\r\n\r\n// import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n//\r\n// export default (posts = [], action) => {\r\n//   switch (action.type) {\r\n//     case FETCH_ALL:\r\n//       return action.payload;\r\n//     case LIKE:\r\n//       return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n//     case CREATE:\r\n//       return [...posts, action.payload];\r\n//     case UPDATE:\r\n//       return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n//     case DELETE:\r\n//       return posts.filter((post) => post._id !== action.payload);\r\n//     default:\r\n//       return posts;\r\n//   }\r\n// };\r\n//\r\n"]},"metadata":{},"sourceType":"module"}