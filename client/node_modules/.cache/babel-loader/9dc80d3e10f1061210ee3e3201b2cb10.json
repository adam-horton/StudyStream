{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\15617\\\\CLionProjects\\\\StudyStream\\\\client\\\\src\\\\LearnSS.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, useDispatch } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from \"./reducers\";\nimport App from './App';\nimport useStyles from \"./styles\";\nimport { getPosts } from \"./actions/posts\";\nimport { getSets } from \"./actions/sets\";\nimport { AppBar, Container, Grid, Grow, Typography } from \"@material-ui/core\";\nimport memories from \"./images/memories.png\";\nimport Posts from \"./components/Posts/Posts\";\nimport Sets from \"./components/Sets/Sets\";\nimport Form from \"./components/Form/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LearnSS() {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPosts());\n    dispatch(getSets());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      className: classes.appBar,\n      position: \"static\",\n      color: \"inherit\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.heading,\n        variant: \"h2\",\n        aligin: \"center\",\n        children: \"StudyStream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grow, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"space-between\",\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 7\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"This is Study Stream! The point of our app is to....INSERT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        noValidate: true,\n        className: `${classes.root} ${classes.form}`,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: currentId ? `Editing \"${post.title}\"` : 'Upload a new Lecture'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"creator\",\n          variant: \"outlined\",\n          label: \"Creator\",\n          fullWidth: true,\n          value: postData.creator,\n          onChange: e => setPostData({ ...postData,\n            creator: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"title\",\n          variant: \"outlined\",\n          label: \"Title\",\n          fullWidth: true,\n          value: postData.title,\n          onChange: e => setPostData({ ...postData,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"message\",\n          variant: \"outlined\",\n          label: \"Message\",\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          value: postData.message,\n          onChange: e => setPostData({ ...postData,\n            message: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"tags\",\n          variant: \"outlined\",\n          label: \"Tags (coma separated)\",\n          fullWidth: true,\n          value: postData.tags,\n          onChange: e => setPostData({ ...postData,\n            tags: e.target.value.split(',')\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.fileInput,\n          children: /*#__PURE__*/_jsxDEV(FileBase, {\n            type: \"file\",\n            multiple: false,\n            onDone: _ref => {\n              let {\n                base64\n              } = _ref;\n              return setPostData({ ...postData,\n                selectedFile: base64\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.buttonSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          type: \"submit\",\n          fullWidth: true,\n          children: \"Submit Lecture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          size: \"small\",\n          onClick: clear,\n          fullWidth: true,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LearnSS, \"Y9tZvcqC0bKJ4LE1NdhuzeAtVFg=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = LearnSS;\nexport default LearnSS;\n\nvar _c;\n\n$RefreshReg$(_c, \"LearnSS\");","map":{"version":3,"sources":["C:/Users/15617/CLionProjects/StudyStream/client/src/LearnSS.js"],"names":["React","useEffect","ReactDOM","Provider","useDispatch","createStore","applyMiddleware","compose","thunk","reducers","App","useStyles","getPosts","getSets","AppBar","Container","Grid","Grow","Typography","memories","Posts","Sets","Form","LearnSS","classes","dispatch","appBar","heading","paper","root","form","handleSubmit","currentId","post","title","postData","creator","e","setPostData","target","value","message","tags","split","fileInput","base64","selectedFile","buttonSubmit","clear"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider, useDispatch} from 'react-redux';\r\nimport {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from \"./reducers\";\r\n\r\n\r\nimport App from './App';\r\nimport useStyles from \"./styles\";\r\nimport {getPosts} from \"./actions/posts\";\r\nimport {getSets} from \"./actions/sets\";\r\nimport {AppBar, Container, Grid, Grow, Typography} from \"@material-ui/core\";\r\nimport memories from \"./images/memories.png\";\r\nimport Posts from \"./components/Posts/Posts\";\r\nimport Sets from \"./components/Sets/Sets\";\r\nimport Form from \"./components/Form/Form\";\r\n\r\nfunction LearnSS() {\r\n    const  classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=> {\r\n        dispatch(getPosts());\r\n        dispatch(getSets());\r\n    },[dispatch]);\r\n\r\n    return (\r\n        <Container maxidth={\"lg\"}>\r\n            <AppBar className={classes.appBar} position = \"static\" color =\"inherit\">\r\n                <Typography className={classes.heading} variant=\"h2\" aligin=\"center\">StudyStream</Typography>\r\n            </AppBar>\r\n            <Grow in>\r\n                <Grid container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n                    <Grid item xs={12} sm={7}>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grow>\r\n            <div>\r\n                This is Study Stream! The point of our app is to....INSERT\r\n            </div>\r\n            <Paper className={classes.paper}>\r\n                <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                    <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Upload a new Lecture'}</Typography>\r\n                    <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\r\n                    <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n                    <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n                    <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\r\n                    <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n                    <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit Lecture</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n                </form>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default LearnSS;"]},"metadata":{},"sourceType":"module"}